# Makefile for ZipArchive library
# Copyright (C) 2000 - 2006 Tadeusz Dracz
# For conditions of distribution and use, see copyright notice in License.txt
# To install to /usr/lib and /usr/include, type:
#    make install
# to install to a different directory change prefix

CC=g++

#CCC=cc
CCC=gcc

#CFLAGS = -D ZIP_ARCHIVE_LNX
CFLAGS =

ZIPARCHLIB = libziparch.a

ZIPPIELOCATION = ../Zippie/

ZLIBLOCATION = zlib/

#prefix = /usr
prefix = 

libdir = ${prefix}/lib
includedir = ${prefix}/include
zipardir = $(includedir)/ziparchive
zlibdir = $(zipardir)/zlib

AR=ar rc
RANLIB=ranlib

.SUFFIXES: .c .cpp
.c.o:
	$(CCC) $(CFLAGS) -c -I. -Izlib -o $*.o $<
.cpp.o:
	$(CC) $(CFLAGS) -c -I. -Izlib $<

OBJS = $(ZLIBLOCATION)adler32.o $(ZLIBLOCATION)compress.o $(ZLIBLOCATION)crc32.o $(ZLIBLOCATION)uncompr.o $(ZLIBLOCATION)deflate.o $(ZLIBLOCATION)trees.o \
$(ZLIBLOCATION)zutil.o $(ZLIBLOCATION)inflate.o $(ZLIBLOCATION)infback.o $(ZLIBLOCATION)inftrees.o $(ZLIBLOCATION)inffast.o\
ZipArchive.o ZipAutoBuffer.o ZipCentralDir.o \
ZipCompatibility.o ZipException.o ZipFile_stl.o ZipFileHeader.o \
ZipMemFile.o ZipPlatformComm.o \
ZipStorage.o ZipString.o BytesWriter.o ZipExtraData.o ZipExtraField.o \
ZipCryptograph.o ZipCrc32Cryptograph.o \
Aes.o Hmac.o RandomPool.o ZipAesCryptograph.o Sha1.o

#OBJP = ZipPathComponent_lnx.o ZipPlatform_lnx.o
OBJP = ZipPathComponent_win.o ZipPlatform_win.o

$(ZIPARCHLIB): $(OBJS) $(OBJP) 
	$(AR) $@ $(OBJS) $(OBJP)
	-@ ($(RANLIB) $@ || true) >/dev/null 2>&1

adler32.o: zlib.h zconf.h
compress.o: zlib.h zconf.h
crc32.o: crc32.h zlib.h zconf.h
deflate.o: deflate.h zutil.h zlib.h zconf.h
inffast.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h
inflate.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h
infback.o: zutil.h zlib.h zconf.h inftrees.h inflate.h inffast.h
inftrees.o: zutil.h zlib.h zconf.h inftrees.h
trees.o: deflate.h zutil.h zlib.h zconf.h trees.h
uncompr.o: zlib.h zconf.h
zutil.o: zutil.h zlib.h zconf.h

ZipArchive.o: ZipArchive.h
ZipAutoBuffer.o: ZipAutoBuffer.h
ZipCentralDir.o: ZipCentralDir.h
ZipCompatibility.o: ZipCompatibility.h
ZipException.o: ZipException.h
ZipFile_stl.o: ZipFile.h
ZipFileHeader.o: ZipFileHeader.h
ZipMemFile.o: ZipMemFile.h
ZipStorage.o: ZipStorage.h
ZipString.o: ZipString.h
BytesWriter.o: BytesWriter.h
ZipExtraData.o: ZipExtraData.h
ZipExtraField.o: ZipExtraField.h
ZipCryptograph.o: ZipCryptograph.h
ZipCrc32Cryptograph.o: ZipCrc32Cryptograph.h
Aes.o: Aes.h
Hmac.o: Hmac.h
RandomPool.o: RandomPool.h
ZipAesCryptograph.o: ZipAesCryptograph.h
Sha1.o: Sha1.h

#ZipPathComponent_lnx.o: ZipPathComponent.h
ZipPathComponent_win.o: ZipPathComponent.h

#ZipPlatform_lnx.o: ZipPlatform.h
ZipPlatform_win.o: ZipPlatform.h


clean:
	-rm -f *.o *~ $(ZIPARCHLIB) $(ZLIBLOCATION)*.o $(ZLIBLOCATION)*~

zippie:
	#$(CC) -I$(zipardir) $(CFLAGS) -o zippie $(ZIPPIELOCATION)zippie.cpp $(ZIPPIELOCATION)CmdLine.cpp -lstdc++ -lziparch
	$(CC) -I$(zipardir) -L$(libdir) $(CFLAGS) -o zippie $(ZIPPIELOCATION)zippie.cpp $(ZIPPIELOCATION)CmdLine.cpp -lstdc++ -lziparch

cleanzippie:
	#-rm -f zippie
	-rm -f zippie.exe

install:
	-@if [ ! -d $(includedir)  ]; then mkdir $(includedir); fi
	-@if [ ! -d $(libdir) ]; then mkdir $(libdir); fi
	-@if [ ! -d $(zipardir)  ]; then mkdir $(zipardir); fi
	-@if [ ! -d $(zlibdir)  ]; then mkdir $(zlibdir); fi
	cp libziparch.a $(libdir)
	chmod 755 $(libdir)/$(ZIPARCHLIB)
	cp *.h $(zipardir)
	chmod 644 $(zipardir)/*h
	cp $(ZLIBLOCATION)*.h $(zlibdir)
	chmod 644 $(zlibdir)/*h

uninstall:
	rm -f $(zlibdir)/*h
	rm -f $(zipardir)/*h	
	rm -f $(libdir)/$(ZIPARCHLIB)
	rmdir $(zlibdir)
	rmdir $(zipardir)



